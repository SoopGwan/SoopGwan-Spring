name: Deploy

on:
  push:
    branches:
      - main

jobs:
  deploy:
    environment: prod
    runs-on: ubuntu-latest

    steps:
      - name: Check Out The Repository
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'zulu'

      - name: Gradle Build
        uses: gradle/gradle-build-action@v2
        with:
          arguments: |
            build
            --no-daemon

      - name: Login to ECR
        id: ecr
        uses: elgohr/ecr-login-action@master
        with:
          access_key: ${{ secrets.AWS_ACCESS_KEY }}
          secret_access_key: ${{ secrets.AWS_SECRET_KEY }}
          region: ${{ secrets.AWS_REGION }}

      - name: Publish to Registry
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          name: soopgwan
          username: ${{ steps.ecr.outputs.username }}
          password: ${{ steps.ecr.outputs.password }}
          registry: ${{ steps.ecr.outputs.registry }}
          buildargs: |
            DB_URL=${{ secrets.DB_URL }}
            DB_USERNAME=${{ secrets.DB_USERNAME }}
            DB_PASSWORD=${{ secrets.DB_PASSWORD }}
            REDIS_HOST=${{ secrets.REDIS_HOST }}
            REDIS_PORT=${{ secrets.REDIS_PORT }}
            REDIS_PASSWORD=${{ secrets.REDIS_PASSWORD }}
            JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}
            JWT_ACCESS_EXP=${{ secrets.JWT_ACCESS_EXP }}
            JWT_REFRESH_EXP=${{ secrets.JWT_REFRESH_EXP }}
            COOLSMS_API_KEY=${{ secrets.COOLSMS_API_KEY }}
            COOLSMS_API_SECRET=${{ secrets.COOLSMS_API_SECRET }}
            COOLSMS_SENDER=${{ secrets.COOLSMS_SENDER }}

      - name: Get current time
        uses: 1466587594/get-current-time@v2
        id: current-time
        with:
          format: YYYYMMDD_HH-mm-ss
          utcOffset: "+09:00"

      - name: Beanstalk Deploy
        uses: einaregilsson/beanstalk-deploy@v14
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY }}
          aws_secret_key: ${{ secrets.AWS_SECRET_KEY }}
          application_name: Soopgwan-Server
          environment_name: Soopgwanserver-env
          version_label: SoopGwan-${{steps.current-time.outputs.formattedTime}}
          region: ${{ secrets.AWS_REGION }}
          deployment_package: Dockerrun.aws.json
          wait_for_environment_recovery: 120
